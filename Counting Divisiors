#include <bits/stdc++.h>
using namespace std;
#define int long long int

const int N = 1e9 + 7;

const int MAXN = 1e5;

const int MOD = 1000007;
int m = 1e6+10;

vector<bool> isPrime(m,1);
vector<int> h(m,0); // this vector stores the highest of prime numbers of the whole prime numbers

void prime(){

    isPrime[0] = isPrime[1] = false;

    for(int i = 2;i<m;i++){

        if(isPrime[i]){
            h[i] = i;

            for(int j = 2*i;j<m;j += i){

                isPrime[j] = false;
                h[j] = i;
            }

        }
    }

    

}

void kr$na()
{

	int x;
    cin>>x;

    

    map<int,int> m;

    while(x > 1){

        int prime_divisior = h[x];

        while(x % prime_divisior == 0){
            x /= prime_divisior;
            m[prime_divisior]++;
        }

    }

    int ans = 1;

    for(auto it : m){

        ans *= (it.second+1);
    }

    cout<<ans<<endl;
	
	

	

	
}

signed main()
{

    int t;
    cin>>t;
    prime();
    while(t--){

        kr$na();

    }
	
    return 0;
}
